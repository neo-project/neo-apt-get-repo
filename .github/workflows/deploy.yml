name: Build & Deploy Repository (apt-get)

on:
  workflow_dispatch:
    inputs:
      neo-version:
        type: string
        description: 'Neo Version (Example: 3.9.0):'
        required: true

env:
  DOTNET_VERSION: 9.0.x
  NEO_PATH: /tmp/npkgs
  NEO_VERSION: ${{ github.event.inputs.neo-version }}
  NEO_URL: https://github.com/neo-project/neo/releases/download

jobs:
  apt-get:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository (apt-get)
      uses: actions/checkout@v4.2.2
      with:
        path: ./apt-repo
        ref: var/www
        fetch-depth: 0

    - name: Checkout Repository (Master)
      uses: actions/checkout@v4.2.2
      with:
        path: ./tools
        ref: master
        fetch-depth: 0

    - name: Install Tools
      run: |
        sudo apt install -y dpkg-dev gpg wget

    - name: Create Build Directory (deb-pkgs)
      run: |
        mkdir -vp ${{ env.NEO_PATH }}
        mkdir -vp ${{ env.NEO_PATH }}/neo-node.v${{ env.NEO_VERSION }}-linux-x64

    - name: Download (neo-cli)
      working-directory: ${{ env.NEO_PATH }}/neo-node.v${{ env.NEO_VERSION }}-linux-x64
      run: |
        wget ${{ env.NEO_URL }}/v${{ env.NEO_VERSION }}/neo-cli.v${{ env.NEO_VERSION }}-linux-x64.tar.gz

    - name: Extract (neo-cli)
      working-directory: ${{ env.NEO_PATH }}
      run: |
        mv -v neo-node.v${{ env.NEO_VERSION }}-linux-x64 neo-node_${{ env.NEO_VERSION }}-1_amd64
        cd neo-node_${{ env.NEO_VERSION }}-1_amd64
        tar -zxvf neo-cli.v${{ env.NEO_VERSION }}-linux-x64.tar.gz
        rm -v neo-cli.v${{ env.NEO_VERSION }}-linux-x64.tar.gz

    - name: Setup
      working-directory: ${{ env.NEO_PATH }}/neo-node_${{ env.NEO_VERSION }}-1_amd64
      run: |
        mkdir -vp ./opt/neo-project/neo-cli
        mv -v $(ls . | grep -v 'opt') ./opt/neo-project/neo-cli
        rm -v ./opt/neo-project/neo-cli/*.so
        mkdir -vp ./usr/bin
        mkdir -vp DEBIAN
        echo "Package: neo-cli
        Version: ${{ env.NEO_VERSION }}
        Maintainer: neo-project
        Depends: libleveldb-dev, libsnappy-dev, libsqlite3-dev
        Architecture: amd64
        Homepage: https://github.com/neo-project/neo
        Description: neo cli node" > ./DEBIAN/control
        ln -sr ./opt/neo-project/neo-cli/neo-cli ./usr/bin/neo-cli
        chmod -R a+rw ./opt/neo-project/neo-cli/*
        chmod -R a+rw ./usr/bin/neo-cli

    - name: Build Package
      working-directory: ${{ env.NEO_PATH }}
      run: |
        dpkg --build neo-node_${{ env.NEO_VERSION }}-1_amd64

    - name: Info Package
      working-directory: ${{ env.NEO_PATH }}
      run: |
        dpkg-deb --info neo-node_${{ env.NEO_VERSION }}-1_amd64.deb
        dpkg-deb --contents neo-node_${{ env.NEO_VERSION }}-1_amd64.deb

    - name: Setup Repo
      working-directory: ./apt-repo/ubuntu
      run: |
        ls -la
        mv -v ${{ env.NEO_PATH }}/neo-node_${{ env.NEO_VERSION }}-1_amd64.deb ./pool/main
        dpkg-scanpackages --arch amd64 ./pool/ > ./dists/stable/main/binary-amd64/Packages
        cat ./dists/stable/main/binary-amd64/Packages | gzip -9 > ./dists/stable/main/binary-amd64/Packages.gz

    - name: Create Release
      working-directory: ./apt-repo/ubuntu/
      run: |
        chmod +x ../../tools/scripts/Release.sh
        ../../tools/scripts/Release.sh > ./dists/stable/Release

    - name: Commit
      working-directory: ./apt-repo
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        git config user.name "$(gh api /users/${{ github.actor }} | jq .name -r)"
        git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        git add .
        git commit -m "Release ${{ env.NEO_VERSION }}"
        git push
